// ******
// MIXINS
// ******

// SOME OF THESE FUNCTIONS/MIXINS ARE BORROWED FROM BOOTSTRAP 4

// FUNCTIONS FOR BREAKPOINT WIDTHS

	// Minimum breakpoint width. Null for the smallest (first) breakpoint.
	@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	  $min: map-get($breakpoints, $name);
	  @return if($min != 0, $min, null);
	}

	// Maximum breakpoint width. Null for the largest (last) breakpoint.
	@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
	  $next: breakpoint-next($name, $breakpoints);
	  @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
	}

// BREAKPOINTS

	// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
	// Makes the @content apply to the given breakpoint and wider.
	@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	  $min: breakpoint-min($name, $breakpoints);
	  @if $min {
	    @media (min-width: $min) {
	      @content;
	    }
	  } @else {
	    @content;
	  }
	}

	// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
	// Makes the @content apply to the given breakpoint and narrower.
	@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
	  $max: breakpoint-max($name, $breakpoints);
	  @if $max {
	    @media (max-width: $max) {
	      @content;
	    }
	  } @else {
	    @content;
	  }
	}

	// Media that spans multiple breakpoint widths.
	// Makes the @content apply between the min and max breakpoints
	@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
	  @include media-breakpoint-up($lower, $breakpoints) {
	    @include media-breakpoint-down($upper, $breakpoints) {
	      @content;
	    }
	  }
	}

// CONTAINERS
	// For each breakpoint, define the maximum width of the container in a media query
	@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
	  @each $breakpoint, $container-max-width in $max-widths {
	    @include media-breakpoint-up($breakpoint, $breakpoints) {
	      width: $container-max-width;
	      max-width: 100%;
	    }
	  }
	}