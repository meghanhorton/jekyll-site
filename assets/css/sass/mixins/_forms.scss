// ******************
// FORM SIZE VARIANTS
// ******************

	// *******
	// INPUTS
	// *******
		@mixin make-form-sizes($sizes: $form-size-variants, $class: input){
			@each $label, $size in $sizes{
				$font-size: 	map-get($size,'font-size');
				$padding: 		map-get($size,'padding');
				$border-width: 	map-get($size,'border-width');

				// For default buttons with no classes, set default color
				@if $label == default{
					&{
						@include make-form-size($font-size,$padding,$border-width);
					}
				} @else {
					&.#{$class}-#{$label}{
						@include make-form-size($font-size,$padding,$border-width);
					}
				}
			}
		}

		// Element size
		@mixin make-form-size($font-size: $font-size-base, $padding: $base $base*2, $border-width: $border-width){
			font-size: $font-size;
			padding: $padding;
			border-width: $border-width;
			line-height: $line-height-base;
		}

	// *******
	// SELECTS
	// *******

		// Make select arrows
		@mixin make-select-arrows($sizes: $form-size-variants, $class: input){
			@each $label, $size in $sizes{
				$font-size: 	map-get($size,'font-size');
				$padding: 		map-get($size,'padding');

				// For default buttons with no classes, set default color
				@if $label == default{
					&{
						@include make-select-arrow($font-size*0.75,$padding);
					}
				} @else {
					&.#{$class}-#{$label}{
						@include make-select-arrow($font-size*0.75,$padding);
					}
				}
			}
		}

		// Select arrow positions
		@mixin make-select-arrow($size: $font-size-base, $padding: $base $base*2){
			background-size: $size;
			background-position: right split-values($padding,horizontal) center;
		}

	// ********************
	// RADIO AND CHECKBOXES 
	// ********************

		// Radio and checks
		@mixin make-radio-checks($sizes: $form-size-variants, $class: input){
			@each $label, $size in $sizes{
				$font-size: 	map-get($size,'font-size');
				$padding: 		map-get($size,'padding');

				// For default buttons with no classes, set default color
				@if $label == default{
					& {
						font-size: $font-size;
						padding-left: $font-size*1.5;
						padding-right: split-values($padding,horizontal);

						.form-display{
							@include make-radio-check($font-size,$padding);
						}
					}
				} @else {
					&.#{$class}-#{$label} {
						font-size: $font-size;
						padding-left: $font-size*1.5;
						padding-right: split-values($padding,horizontal);

						.form-display{
							@include make-radio-check($font-size,$padding);
						}
					}
				}
			}
		}

		// Make sizes
		@mixin make-radio-check($size: $font-size-base, $padding: $base $base*2){
			width: $size;
			height: $size;
		}

		// Radio button circle sizes
		@mixin make-radio-circle($sizes: $form-size-variants, $class: input){
			@each $label, $size in $sizes{
				$font-size: 	map-get($size,'font-size');
				$pos: 				ceil($font-size * 0.25);

				// For default buttons with no classes, set default color
				@if $label == default{
					& + .form-display:after{
						top: $pos;
						right: $pos;
						bottom: $pos;
						left: $pos;
					}
				} @else {
					&.#{$class}-#{$label} {
						& + .form-display:after{
							top: $pos;
							right: $pos;
							bottom: $pos;
							left: $pos;
						}
					}
				}
			}
		}

	// ********
	// SWITCHES 
	// ********

		// Switches
		@mixin make-switches($sizes: $form-size-variants, $class: input){
			@each $label, $size in $sizes{
				$font-size: 	map-get($size,'font-size');
				$padding: 		map-get($size,'padding');

				// For default buttons with no classes, set default color
				@if $label == default{
					& {
						font-size: $font-size;
						padding-left: $font-size*2.75;
						padding-right: split-values($padding,horizontal);

						.form-display{
							@include make-switch($font-size,$padding);
						}
					}
				} @else {
					&.#{$class}-#{$label} {
						font-size: $font-size;
						padding-left: $font-size*2.75;
						padding-right: split-values($padding,horizontal);

						.form-display{
							@include make-switch($font-size,$padding);
						}
					}
				}
			}
		}

		// Individual switch
		@mixin make-switch($size: $font-size-base, $padding: $base $base*2){
			width: ceil($size * 2);
			height: ceil($size);
			border-radius: ceil($size/2);
		}

		// Radio button circle sizes
		@mixin make-switch-inserts($sizes: $form-size-variants, $class: input){
			@each $label, $size in $sizes{
				$font-size: 	ceil(map-get($size,'font-size'));

				// For default buttons with no classes, set default color
				@if $label == default{
					input + .form-display:after{
						width: $font-size;
						height: $font-size;
						border-radius: ceil($font-size/2);
					}

					input:checked + .form-display:after{
						margin-left: $font-size;
					}
				} @else {
					&.#{$class}-#{$label} {
						input + .form-display:after{
							width: $font-size;
							height: $font-size;
							border-radius: ceil($font-size/2);
						}

						input:checked + .form-display:after{
							margin-left: $font-size;
						}
					}

					
				}
			}
		}

